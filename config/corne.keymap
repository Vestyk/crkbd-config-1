/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
        keymap {
                compatible = "zmk,keymap";
                // layer 0
                default_layer {
// -----------------------------------------------------------------------------------------
// |     |  '  |  ,  |  .  |  P  |  Y  |   |  F  |  G   |  C  |  R  |  L  |  /  |
// |     |  A  |  O  |  E  |  U  |  I  |   |  D  |  H   |  T  |  N  |  S  |  -  |
// |  `  |  ;  |  Q  |  J  |  K  |  X  |   |  B  |  M   |  W  |  V  |  Z  |     |
//                   | DEL | SPC | TAB |   | RET | BKSP | ESC |
                        bindings = <
   &none     &kp SQT     &kp COMMA   &kp PERIOD  &kp P       &kp Y      &kp F     &kp G       &kp C        &kp R      &kp L        &kp SLASH
   &none     &mt LGUI A  &mt LALT O  &mt LCTRL E &mt LSHFT U &kp I      &kp D     &mt RSHFT H &mt RCTRL T  &mt RALT N &mt RGUI S   &kp MINUS
   &kp GRAVE &kp SEMI    &kp Q       &kp J       &kp K       &kp X      &kp B     &kp M       &kp W        &kp V      &kp Z        &none
                                     &lt 1 DEL   &lt 2 SPACE &lt 3 TAB  &lt 3 RET &lt 2 BSPC  &lt 1 ESC
                        >;
                };

                // layer 1
                func_media_layer {
// -----------------------------------------------------------------------------------------
// | RESET| BT0 |  F7 |  F8 |  F9 | F12 |   |     |      | BDN | BUP |     | RESET|
// | BOOTL| BT1 |  F4 |  F5 |  F6 | F11 |   |     | PREV | VDN | VUP | NEXT| BOOTL|
// | BTCLR| BT2 |  F1 |  F2 |  F3 | F10 |   |     |      |     |     |     | EXPWR|
//                    | DEL | SPC | TAB |   | STOP| PLPS | MUTE|
                        bindings = <
   &reset      &bt BT_SEL 0  &kp F7      &kp F8       &kp F9       &kp F12     &none      &none            &kp C_BRI_DN       &kp C_BRI_UP        &none           &reset
   &bootloader &bt BT_SEL 1  &mt LALT F4 &mt LCTRL F5 &mt LSHFT F6 &kp F11     &none      &mt RSHFT C_PREV &mt RCTRL C_VOL_DN &mt RALT C_VOL_UP   &mt RGUI C_NEXT &bootloader
   &bt BT_CLR  &bt BT_SEL 2  &kp F1      &kp F2       &kp F3       &kp F10     &none      &none            &none              &none               &none           &ext_power EP_TOG
                                         &kp DEL      &kp SPACE    &kp TAB     &kp C_STOP &kp C_PP         &kp K_MUTE
                        >;
                };

                // layer 2
                num_nav_layer {
// -----------------------------------------------------------------------------------------
// |      |  Â£  |  7  |  8  |  9  |  /  |   | REDO| PST | CPY | CUT | UNDO|      |
// |      |  .  |  4  |  5  |  6  |  *  |   |     | LFT | DWN | UP  |RIGHT|      |
// |      |  $  |  1  |  2  |  3  |  -  |   |     | HOME| PGDN| PGUP| END |      |
//                    |  =  |  0  |  +  |   | RET | BKSP| ESC |
                        bindings = <
   &none  &none            &kp N7       &kp N8       &kp N9       &kp KP_DIVIDE    &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY  &kp C_AC_CUT  &kp C_AC_UNDO  &none
   &none  &mt LGUI KP_DOT  &mt LALT N4  &mt LCTRL N5 &mt LSHFT N6 &kp KP_MULTIPLY  &none          &kp LEFT        &kp DOWN       &kp UP        &kp RIGHT      &none
   &none  &kp DOLLAR       &kp N1       &kp N2       &kp N3       &kp KP_MINUS     &none          &kp HOME        &kp PG_DN      &kp PG_UP     &kp END        &none
                                        &kp KP_EQUAL &kp N0       &kp KP_PLUS      &kp RET        &kp BSPC        &kp ESC
                        >;
                };

                // layer 3
                sym_mouse_layer {
// -----------------------------------------------------------------------------------------
// |   \  |  @  |  #  |  {  |  }  |  =  |   |     |     |     |     |     |      |
// |   ?  |  `  |  %  |  (  |  )  | "|" |   |     |     |     |     |     |      |
// |   *  |  &  |  ^  |  [  |  ]  |  ~  |   |     |     |     |     |     |      |
//                    |  !  |  /  |  $  |   | ENT |     | ALT |
                        bindings = <
   &kp BACKSLASH &kp AT        &kp HASH    &kp LEFT_BRACE       &kp RIGHT_BRACE        &kp EQUAL     &none  &none       &none        &none      &none        &none
   &kp QUESTION  &kp GRAVE     &kp PERCENT &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS  &kp PIPE      &none  &mt RSHFT H &mt RCTRL J  &mt RALT K &mt RGUI L   &none
   &kp STAR      &kp AMPERSAND &kp CARET   &kp LEFT_BRACKET     &kp RIGHT_BRACKET      &kp TILDE     &none  &none       &none        &none      &none        &none
                                           &kp EXCLAMATION      &kp SLASH              &kp DOLLAR    &none  &none       &none
                        >;
                };
        };
};
